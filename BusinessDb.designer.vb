'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:4.0.30319.42000
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FANTIC")>  _
Partial Public Class BusinessDbDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definizioni metodo Extensibility"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertlistini(instance As listini)
    End Sub
  Partial Private Sub Updatelistini(instance As listini)
    End Sub
  Partial Private Sub Deletelistini(instance As listini)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.UtilityDocumenti.My.MySettings.Default.FANTICConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property listini() As System.Data.Linq.Table(Of listini)
		Get
			Return Me.GetTable(Of listini)
		End Get
	End Property
	
	Public ReadOnly Property RDM_UTL_CambiaArtOrdini() As System.Data.Linq.Table(Of RDM_UTL_CambiaArtOrdini)
		Get
			Return Me.GetTable(Of RDM_UTL_CambiaArtOrdini)
		End Get
	End Property
	
	Public ReadOnly Property RDM_Param9100() As System.Data.Linq.Table(Of RDM_Param9100)
		Get
			Return Me.GetTable(Of RDM_Param9100)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.listini")>  _
Partial Public Class listini
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lc_codart As String
	
	Private _lc_codlavo As Short
	
	Private _lc_conto As Integer
	
	Private _lc_codvalu As Short
	
	Private _lc_codtpro As Short
	
	Private _lc_listino As Short
	
	Private _lc_datagg As Date
	
	Private _lc_tipo As String
	
	Private _lc_prezzo As Decimal
	
	Private _lc_datscad As Date
	
	Private _lc_daquant As Decimal
	
	Private _lc_aquant As Decimal
	
	Private _lc_perqta As Decimal
	
	Private _lc_unmis As String
	
	Private _lc_note As String
	
	Private _lc_netto As String
	
	Private _codditt As String
	
	Private _lc_progr As Integer
	
	Private _lc_fase As Short
	
	Private _lc_ultagg As Date
	
	Private _lc_codcas As String
	
	Private _lc_coddest As Integer
	
	Private _lc_hhflricisp As String
	
    #Region "Definizioni metodo Extensibility"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onlc_codartChanging(value As String)
    End Sub
    Partial Private Sub Onlc_codartChanged()
    End Sub
    Partial Private Sub Onlc_codlavoChanging(value As Short)
    End Sub
    Partial Private Sub Onlc_codlavoChanged()
    End Sub
    Partial Private Sub Onlc_contoChanging(value As Integer)
    End Sub
    Partial Private Sub Onlc_contoChanged()
    End Sub
    Partial Private Sub Onlc_codvaluChanging(value As Short)
    End Sub
    Partial Private Sub Onlc_codvaluChanged()
    End Sub
    Partial Private Sub Onlc_codtproChanging(value As Short)
    End Sub
    Partial Private Sub Onlc_codtproChanged()
    End Sub
    Partial Private Sub Onlc_listinoChanging(value As Short)
    End Sub
    Partial Private Sub Onlc_listinoChanged()
    End Sub
    Partial Private Sub Onlc_dataggChanging(value As Date)
    End Sub
    Partial Private Sub Onlc_dataggChanged()
    End Sub
    Partial Private Sub Onlc_tipoChanging(value As String)
    End Sub
    Partial Private Sub Onlc_tipoChanged()
    End Sub
    Partial Private Sub Onlc_prezzoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onlc_prezzoChanged()
    End Sub
    Partial Private Sub Onlc_datscadChanging(value As Date)
    End Sub
    Partial Private Sub Onlc_datscadChanged()
    End Sub
    Partial Private Sub Onlc_daquantChanging(value As Decimal)
    End Sub
    Partial Private Sub Onlc_daquantChanged()
    End Sub
    Partial Private Sub Onlc_aquantChanging(value As Decimal)
    End Sub
    Partial Private Sub Onlc_aquantChanged()
    End Sub
    Partial Private Sub Onlc_perqtaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onlc_perqtaChanged()
    End Sub
    Partial Private Sub Onlc_unmisChanging(value As String)
    End Sub
    Partial Private Sub Onlc_unmisChanged()
    End Sub
    Partial Private Sub Onlc_noteChanging(value As String)
    End Sub
    Partial Private Sub Onlc_noteChanged()
    End Sub
    Partial Private Sub Onlc_nettoChanging(value As String)
    End Sub
    Partial Private Sub Onlc_nettoChanged()
    End Sub
    Partial Private Sub OncoddittChanging(value As String)
    End Sub
    Partial Private Sub OncoddittChanged()
    End Sub
    Partial Private Sub Onlc_progrChanging(value As Integer)
    End Sub
    Partial Private Sub Onlc_progrChanged()
    End Sub
    Partial Private Sub Onlc_faseChanging(value As Short)
    End Sub
    Partial Private Sub Onlc_faseChanged()
    End Sub
    Partial Private Sub Onlc_ultaggChanging(value As Date)
    End Sub
    Partial Private Sub Onlc_ultaggChanged()
    End Sub
    Partial Private Sub Onlc_codcasChanging(value As String)
    End Sub
    Partial Private Sub Onlc_codcasChanged()
    End Sub
    Partial Private Sub Onlc_coddestChanging(value As Integer)
    End Sub
    Partial Private Sub Onlc_coddestChanged()
    End Sub
    Partial Private Sub Onlc_hhflricispChanging(value As String)
    End Sub
    Partial Private Sub Onlc_hhflricispChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_codart", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property lc_codart() As String
		Get
			Return Me._lc_codart
		End Get
		Set
			If (String.Equals(Me._lc_codart, value) = false) Then
				Me.Onlc_codartChanging(value)
				Me.SendPropertyChanging
				Me._lc_codart = value
				Me.SendPropertyChanged("lc_codart")
				Me.Onlc_codartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_codlavo", DbType:="SmallInt NOT NULL")>  _
	Public Property lc_codlavo() As Short
		Get
			Return Me._lc_codlavo
		End Get
		Set
			If ((Me._lc_codlavo = value)  _
						= false) Then
				Me.Onlc_codlavoChanging(value)
				Me.SendPropertyChanging
				Me._lc_codlavo = value
				Me.SendPropertyChanged("lc_codlavo")
				Me.Onlc_codlavoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_conto", DbType:="Int NOT NULL")>  _
	Public Property lc_conto() As Integer
		Get
			Return Me._lc_conto
		End Get
		Set
			If ((Me._lc_conto = value)  _
						= false) Then
				Me.Onlc_contoChanging(value)
				Me.SendPropertyChanging
				Me._lc_conto = value
				Me.SendPropertyChanged("lc_conto")
				Me.Onlc_contoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_codvalu", DbType:="SmallInt NOT NULL")>  _
	Public Property lc_codvalu() As Short
		Get
			Return Me._lc_codvalu
		End Get
		Set
			If ((Me._lc_codvalu = value)  _
						= false) Then
				Me.Onlc_codvaluChanging(value)
				Me.SendPropertyChanging
				Me._lc_codvalu = value
				Me.SendPropertyChanged("lc_codvalu")
				Me.Onlc_codvaluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_codtpro", DbType:="SmallInt NOT NULL")>  _
	Public Property lc_codtpro() As Short
		Get
			Return Me._lc_codtpro
		End Get
		Set
			If ((Me._lc_codtpro = value)  _
						= false) Then
				Me.Onlc_codtproChanging(value)
				Me.SendPropertyChanging
				Me._lc_codtpro = value
				Me.SendPropertyChanged("lc_codtpro")
				Me.Onlc_codtproChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_listino", DbType:="SmallInt NOT NULL")>  _
	Public Property lc_listino() As Short
		Get
			Return Me._lc_listino
		End Get
		Set
			If ((Me._lc_listino = value)  _
						= false) Then
				Me.Onlc_listinoChanging(value)
				Me.SendPropertyChanging
				Me._lc_listino = value
				Me.SendPropertyChanged("lc_listino")
				Me.Onlc_listinoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_datagg", DbType:="DateTime NOT NULL")>  _
	Public Property lc_datagg() As Date
		Get
			Return Me._lc_datagg
		End Get
		Set
			If ((Me._lc_datagg = value)  _
						= false) Then
				Me.Onlc_dataggChanging(value)
				Me.SendPropertyChanging
				Me._lc_datagg = value
				Me.SendPropertyChanged("lc_datagg")
				Me.Onlc_dataggChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_tipo", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property lc_tipo() As String
		Get
			Return Me._lc_tipo
		End Get
		Set
			If (String.Equals(Me._lc_tipo, value) = false) Then
				Me.Onlc_tipoChanging(value)
				Me.SendPropertyChanging
				Me._lc_tipo = value
				Me.SendPropertyChanged("lc_tipo")
				Me.Onlc_tipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_prezzo", DbType:="Decimal(24,6) NOT NULL")>  _
	Public Property lc_prezzo() As Decimal
		Get
			Return Me._lc_prezzo
		End Get
		Set
			If ((Me._lc_prezzo = value)  _
						= false) Then
				Me.Onlc_prezzoChanging(value)
				Me.SendPropertyChanging
				Me._lc_prezzo = value
				Me.SendPropertyChanged("lc_prezzo")
				Me.Onlc_prezzoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_datscad", DbType:="DateTime NOT NULL")>  _
	Public Property lc_datscad() As Date
		Get
			Return Me._lc_datscad
		End Get
		Set
			If ((Me._lc_datscad = value)  _
						= false) Then
				Me.Onlc_datscadChanging(value)
				Me.SendPropertyChanging
				Me._lc_datscad = value
				Me.SendPropertyChanged("lc_datscad")
				Me.Onlc_datscadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_daquant", DbType:="Decimal(27,9) NOT NULL")>  _
	Public Property lc_daquant() As Decimal
		Get
			Return Me._lc_daquant
		End Get
		Set
			If ((Me._lc_daquant = value)  _
						= false) Then
				Me.Onlc_daquantChanging(value)
				Me.SendPropertyChanging
				Me._lc_daquant = value
				Me.SendPropertyChanged("lc_daquant")
				Me.Onlc_daquantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_aquant", DbType:="Decimal(27,9) NOT NULL")>  _
	Public Property lc_aquant() As Decimal
		Get
			Return Me._lc_aquant
		End Get
		Set
			If ((Me._lc_aquant = value)  _
						= false) Then
				Me.Onlc_aquantChanging(value)
				Me.SendPropertyChanging
				Me._lc_aquant = value
				Me.SendPropertyChanged("lc_aquant")
				Me.Onlc_aquantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_perqta", DbType:="Decimal(27,9) NOT NULL")>  _
	Public Property lc_perqta() As Decimal
		Get
			Return Me._lc_perqta
		End Get
		Set
			If ((Me._lc_perqta = value)  _
						= false) Then
				Me.Onlc_perqtaChanging(value)
				Me.SendPropertyChanging
				Me._lc_perqta = value
				Me.SendPropertyChanged("lc_perqta")
				Me.Onlc_perqtaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_unmis", DbType:="NVarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property lc_unmis() As String
		Get
			Return Me._lc_unmis
		End Get
		Set
			If (String.Equals(Me._lc_unmis, value) = false) Then
				Me.Onlc_unmisChanging(value)
				Me.SendPropertyChanging
				Me._lc_unmis = value
				Me.SendPropertyChanged("lc_unmis")
				Me.Onlc_unmisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_note", DbType:="NVarChar(255)")>  _
	Public Property lc_note() As String
		Get
			Return Me._lc_note
		End Get
		Set
			If (String.Equals(Me._lc_note, value) = false) Then
				Me.Onlc_noteChanging(value)
				Me.SendPropertyChanging
				Me._lc_note = value
				Me.SendPropertyChanged("lc_note")
				Me.Onlc_noteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_netto", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property lc_netto() As String
		Get
			Return Me._lc_netto
		End Get
		Set
			If (String.Equals(Me._lc_netto, value) = false) Then
				Me.Onlc_nettoChanging(value)
				Me.SendPropertyChanging
				Me._lc_netto = value
				Me.SendPropertyChanged("lc_netto")
				Me.Onlc_nettoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codditt", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property codditt() As String
		Get
			Return Me._codditt
		End Get
		Set
			If (String.Equals(Me._codditt, value) = false) Then
				Me.OncoddittChanging(value)
				Me.SendPropertyChanging
				Me._codditt = value
				Me.SendPropertyChanged("codditt")
				Me.OncoddittChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_progr", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property lc_progr() As Integer
		Get
			Return Me._lc_progr
		End Get
		Set
			If ((Me._lc_progr = value)  _
						= false) Then
				Me.Onlc_progrChanging(value)
				Me.SendPropertyChanging
				Me._lc_progr = value
				Me.SendPropertyChanged("lc_progr")
				Me.Onlc_progrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_fase", DbType:="SmallInt NOT NULL")>  _
	Public Property lc_fase() As Short
		Get
			Return Me._lc_fase
		End Get
		Set
			If ((Me._lc_fase = value)  _
						= false) Then
				Me.Onlc_faseChanging(value)
				Me.SendPropertyChanging
				Me._lc_fase = value
				Me.SendPropertyChanged("lc_fase")
				Me.Onlc_faseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_ultagg", DbType:="DateTime NOT NULL")>  _
	Public Property lc_ultagg() As Date
		Get
			Return Me._lc_ultagg
		End Get
		Set
			If ((Me._lc_ultagg = value)  _
						= false) Then
				Me.Onlc_ultaggChanging(value)
				Me.SendPropertyChanging
				Me._lc_ultagg = value
				Me.SendPropertyChanged("lc_ultagg")
				Me.Onlc_ultaggChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_codcas", DbType:="NVarChar(18) NOT NULL", CanBeNull:=false)>  _
	Public Property lc_codcas() As String
		Get
			Return Me._lc_codcas
		End Get
		Set
			If (String.Equals(Me._lc_codcas, value) = false) Then
				Me.Onlc_codcasChanging(value)
				Me.SendPropertyChanging
				Me._lc_codcas = value
				Me.SendPropertyChanged("lc_codcas")
				Me.Onlc_codcasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_coddest", DbType:="Int NOT NULL")>  _
	Public Property lc_coddest() As Integer
		Get
			Return Me._lc_coddest
		End Get
		Set
			If ((Me._lc_coddest = value)  _
						= false) Then
				Me.Onlc_coddestChanging(value)
				Me.SendPropertyChanging
				Me._lc_coddest = value
				Me.SendPropertyChanged("lc_coddest")
				Me.Onlc_coddestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lc_hhflricisp", DbType:="NVarChar(1)")>  _
	Public Property lc_hhflricisp() As String
		Get
			Return Me._lc_hhflricisp
		End Get
		Set
			If (String.Equals(Me._lc_hhflricisp, value) = false) Then
				Me.Onlc_hhflricispChanging(value)
				Me.SendPropertyChanging
				Me._lc_hhflricisp = value
				Me.SendPropertyChanged("lc_hhflricisp")
				Me.Onlc_hhflricispChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RDM_UTL_CambiaArtOrdini")>  _
Partial Public Class RDM_UTL_CambiaArtOrdini
	
	Private _mo_tipork As String
	
	Private _mo_anno As Short
	
	Private _mo_serie As String
	
	Private _mo_numord As Integer
	
	Private _mo_riga As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mo_tipork", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property mo_tipork() As String
		Get
			Return Me._mo_tipork
		End Get
		Set
			If (String.Equals(Me._mo_tipork, value) = false) Then
				Me._mo_tipork = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mo_anno", DbType:="SmallInt NOT NULL")>  _
	Public Property mo_anno() As Short
		Get
			Return Me._mo_anno
		End Get
		Set
			If ((Me._mo_anno = value)  _
						= false) Then
				Me._mo_anno = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mo_serie", DbType:="NVarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property mo_serie() As String
		Get
			Return Me._mo_serie
		End Get
		Set
			If (String.Equals(Me._mo_serie, value) = false) Then
				Me._mo_serie = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mo_numord", DbType:="Int NOT NULL")>  _
	Public Property mo_numord() As Integer
		Get
			Return Me._mo_numord
		End Get
		Set
			If ((Me._mo_numord = value)  _
						= false) Then
				Me._mo_numord = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mo_riga", DbType:="Int NOT NULL")>  _
	Public Property mo_riga() As Integer
		Get
			Return Me._mo_riga
		End Get
		Set
			If ((Me._mo_riga = value)  _
						= false) Then
				Me._mo_riga = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RDM_Param9100")>  _
Partial Public Class RDM_Param9100
	
	Private _TipoDod As String
	
	Private _AnnoDoc As System.Nullable(Of Integer)
	
	Private _SerieDoc As String
	
	Private _NumDoc As System.Nullable(Of Integer)
	
	Private _RigaDoc As System.Nullable(Of Integer)
	
	Private _DataDoc As Date
	
	Private _AnnoData As System.Nullable(Of Integer)
	
	Private _MeseData As System.Nullable(Of Integer)
	
	Private _CodConto As Integer
	
	Private _CodArticolo As String
	
	Private _CodCausale As System.Nullable(Of Short)
	
	Private _DescCausale As String
	
	Private _QtaFat As Double
	
	Private _ValoreFatEuro As Decimal
	
	Private _CmeFatt As System.Nullable(Of Double)
	
	Private _AnnoRif As Integer
	
	Private _RifAlfabetico As String
	
	Private _NumRif As Integer
	
	Private _QtaCmp As Double
	
	Private _ValoreCmp As Decimal
	
	Private _Cmp As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDod", DbType:="VarChar(20)")>  _
	Public Property TipoDod() As String
		Get
			Return Me._TipoDod
		End Get
		Set
			If (String.Equals(Me._TipoDod, value) = false) Then
				Me._TipoDod = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnnoDoc", DbType:="Int")>  _
	Public Property AnnoDoc() As System.Nullable(Of Integer)
		Get
			Return Me._AnnoDoc
		End Get
		Set
			If (Me._AnnoDoc.Equals(value) = false) Then
				Me._AnnoDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerieDoc", DbType:="VarChar(3)")>  _
	Public Property SerieDoc() As String
		Get
			Return Me._SerieDoc
		End Get
		Set
			If (String.Equals(Me._SerieDoc, value) = false) Then
				Me._SerieDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Int")>  _
	Public Property NumDoc() As System.Nullable(Of Integer)
		Get
			Return Me._NumDoc
		End Get
		Set
			If (Me._NumDoc.Equals(value) = false) Then
				Me._NumDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RigaDoc", DbType:="Int")>  _
	Public Property RigaDoc() As System.Nullable(Of Integer)
		Get
			Return Me._RigaDoc
		End Get
		Set
			If (Me._RigaDoc.Equals(value) = false) Then
				Me._RigaDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataDoc", DbType:="DateTime NOT NULL")>  _
	Public Property DataDoc() As Date
		Get
			Return Me._DataDoc
		End Get
		Set
			If ((Me._DataDoc = value)  _
						= false) Then
				Me._DataDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnnoData", DbType:="Int")>  _
	Public Property AnnoData() As System.Nullable(Of Integer)
		Get
			Return Me._AnnoData
		End Get
		Set
			If (Me._AnnoData.Equals(value) = false) Then
				Me._AnnoData = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeseData", DbType:="Int")>  _
	Public Property MeseData() As System.Nullable(Of Integer)
		Get
			Return Me._MeseData
		End Get
		Set
			If (Me._MeseData.Equals(value) = false) Then
				Me._MeseData = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodConto", DbType:="Int NOT NULL")>  _
	Public Property CodConto() As Integer
		Get
			Return Me._CodConto
		End Get
		Set
			If ((Me._CodConto = value)  _
						= false) Then
				Me._CodConto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodArticolo", DbType:="VarChar(50)")>  _
	Public Property CodArticolo() As String
		Get
			Return Me._CodArticolo
		End Get
		Set
			If (String.Equals(Me._CodArticolo, value) = false) Then
				Me._CodArticolo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodCausale", DbType:="SmallInt")>  _
	Public Property CodCausale() As System.Nullable(Of Short)
		Get
			Return Me._CodCausale
		End Get
		Set
			If (Me._CodCausale.Equals(value) = false) Then
				Me._CodCausale = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescCausale", DbType:="VarChar(30)")>  _
	Public Property DescCausale() As String
		Get
			Return Me._DescCausale
		End Get
		Set
			If (String.Equals(Me._DescCausale, value) = false) Then
				Me._DescCausale = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtaFat", DbType:="Float NOT NULL")>  _
	Public Property QtaFat() As Double
		Get
			Return Me._QtaFat
		End Get
		Set
			If ((Me._QtaFat = value)  _
						= false) Then
				Me._QtaFat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreFatEuro", DbType:="Money NOT NULL")>  _
	Public Property ValoreFatEuro() As Decimal
		Get
			Return Me._ValoreFatEuro
		End Get
		Set
			If ((Me._ValoreFatEuro = value)  _
						= false) Then
				Me._ValoreFatEuro = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CmeFatt", DbType:="Float")>  _
	Public Property CmeFatt() As System.Nullable(Of Double)
		Get
			Return Me._CmeFatt
		End Get
		Set
			If (Me._CmeFatt.Equals(value) = false) Then
				Me._CmeFatt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnnoRif", DbType:="Int NOT NULL")>  _
	Public Property AnnoRif() As Integer
		Get
			Return Me._AnnoRif
		End Get
		Set
			If ((Me._AnnoRif = value)  _
						= false) Then
				Me._AnnoRif = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RifAlfabetico", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property RifAlfabetico() As String
		Get
			Return Me._RifAlfabetico
		End Get
		Set
			If (String.Equals(Me._RifAlfabetico, value) = false) Then
				Me._RifAlfabetico = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumRif", DbType:="Int NOT NULL")>  _
	Public Property NumRif() As Integer
		Get
			Return Me._NumRif
		End Get
		Set
			If ((Me._NumRif = value)  _
						= false) Then
				Me._NumRif = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtaCmp", DbType:="Float NOT NULL")>  _
	Public Property QtaCmp() As Double
		Get
			Return Me._QtaCmp
		End Get
		Set
			If ((Me._QtaCmp = value)  _
						= false) Then
				Me._QtaCmp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreCmp", DbType:="Money NOT NULL")>  _
	Public Property ValoreCmp() As Decimal
		Get
			Return Me._ValoreCmp
		End Get
		Set
			If ((Me._ValoreCmp = value)  _
						= false) Then
				Me._ValoreCmp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cmp", DbType:="Money NOT NULL")>  _
	Public Property Cmp() As Decimal
		Get
			Return Me._Cmp
		End Get
		Set
			If ((Me._Cmp = value)  _
						= false) Then
				Me._Cmp = value
			End If
		End Set
	End Property
End Class
